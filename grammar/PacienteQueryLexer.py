# Generated from PacienteQuery.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,161,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,9,
        1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,
        13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,
        16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,
        17,1,17,1,18,1,18,5,18,132,8,18,10,18,12,18,135,9,18,1,18,1,18,1,
        19,3,19,140,8,19,1,19,4,19,143,8,19,11,19,12,19,144,1,19,1,19,4,
        19,149,8,19,11,19,12,19,150,3,19,153,8,19,1,20,4,20,156,8,20,11,
        20,12,20,157,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,1,0,3,3,0,10,10,13,13,34,34,1,0,48,57,3,0,9,10,13,13,
        32,32,166,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,1,43,1,0,0,0,3,48,1,0,0,0,5,50,1,0,0,0,7,57,1,
        0,0,0,9,64,1,0,0,0,11,74,1,0,0,0,13,80,1,0,0,0,15,82,1,0,0,0,17,
        84,1,0,0,0,19,87,1,0,0,0,21,90,1,0,0,0,23,93,1,0,0,0,25,96,1,0,0,
        0,27,100,1,0,0,0,29,103,1,0,0,0,31,109,1,0,0,0,33,113,1,0,0,0,35,
        121,1,0,0,0,37,129,1,0,0,0,39,139,1,0,0,0,41,155,1,0,0,0,43,44,5,
        108,0,0,44,45,5,111,0,0,45,46,5,97,0,0,46,47,5,100,0,0,47,2,1,0,
        0,0,48,49,5,59,0,0,49,4,1,0,0,0,50,51,5,102,0,0,51,52,5,105,0,0,
        52,53,5,108,0,0,53,54,5,116,0,0,54,55,5,101,0,0,55,56,5,114,0,0,
        56,6,1,0,0,0,57,58,5,99,0,0,58,59,5,111,0,0,59,60,5,108,0,0,60,61,
        5,117,0,0,61,62,5,109,0,0,62,63,5,110,0,0,63,8,1,0,0,0,64,65,5,97,
        0,0,65,66,5,103,0,0,66,67,5,103,0,0,67,68,5,114,0,0,68,69,5,101,
        0,0,69,70,5,103,0,0,70,71,5,97,0,0,71,72,5,116,0,0,72,73,5,101,0,
        0,73,10,1,0,0,0,74,75,5,112,0,0,75,76,5,114,0,0,76,77,5,105,0,0,
        77,78,5,110,0,0,78,79,5,116,0,0,79,12,1,0,0,0,80,81,5,62,0,0,81,
        14,1,0,0,0,82,83,5,60,0,0,83,16,1,0,0,0,84,85,5,62,0,0,85,86,5,61,
        0,0,86,18,1,0,0,0,87,88,5,60,0,0,88,89,5,61,0,0,89,20,1,0,0,0,90,
        91,5,61,0,0,91,92,5,61,0,0,92,22,1,0,0,0,93,94,5,33,0,0,94,95,5,
        61,0,0,95,24,1,0,0,0,96,97,5,65,0,0,97,98,5,78,0,0,98,99,5,68,0,
        0,99,26,1,0,0,0,100,101,5,79,0,0,101,102,5,82,0,0,102,28,1,0,0,0,
        103,104,5,99,0,0,104,105,5,111,0,0,105,106,5,117,0,0,106,107,5,110,
        0,0,107,108,5,116,0,0,108,30,1,0,0,0,109,110,5,115,0,0,110,111,5,
        117,0,0,111,112,5,109,0,0,112,32,1,0,0,0,113,114,5,97,0,0,114,115,
        5,118,0,0,115,116,5,101,0,0,116,117,5,114,0,0,117,118,5,97,0,0,118,
        119,5,103,0,0,119,120,5,101,0,0,120,34,1,0,0,0,121,122,5,98,0,0,
        122,123,5,101,0,0,123,124,5,116,0,0,124,125,5,119,0,0,125,126,5,
        101,0,0,126,127,5,101,0,0,127,128,5,110,0,0,128,36,1,0,0,0,129,133,
        5,34,0,0,130,132,8,0,0,0,131,130,1,0,0,0,132,135,1,0,0,0,133,131,
        1,0,0,0,133,134,1,0,0,0,134,136,1,0,0,0,135,133,1,0,0,0,136,137,
        5,34,0,0,137,38,1,0,0,0,138,140,5,45,0,0,139,138,1,0,0,0,139,140,
        1,0,0,0,140,142,1,0,0,0,141,143,7,1,0,0,142,141,1,0,0,0,143,144,
        1,0,0,0,144,142,1,0,0,0,144,145,1,0,0,0,145,152,1,0,0,0,146,148,
        5,46,0,0,147,149,7,1,0,0,148,147,1,0,0,0,149,150,1,0,0,0,150,148,
        1,0,0,0,150,151,1,0,0,0,151,153,1,0,0,0,152,146,1,0,0,0,152,153,
        1,0,0,0,153,40,1,0,0,0,154,156,7,2,0,0,155,154,1,0,0,0,156,157,1,
        0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,159,1,0,0,0,159,160,6,
        20,0,0,160,42,1,0,0,0,7,0,133,139,144,150,152,157,1,6,0,0
    ]

class PacienteQueryLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    STRING = 19
    NUMBER = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'load'", "';'", "'filter'", "'column'", "'aggregate'", "'print'", 
            "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'AND'", "'OR'", 
            "'count'", "'sum'", "'average'", "'between'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "STRING", "NUMBER", 
                  "WS" ]

    grammarFileName = "PacienteQuery.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


